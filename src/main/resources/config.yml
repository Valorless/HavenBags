############################################################
# +------------------------------------------------------+ #
# |                       Config                         | #
# +------------------------------------------------------+ #
############################################################

# DO NOT EDIT
config-version: 5

# Additional messages used for debugging.
debug: false

# Should we check for plugin updates?
check-updates: true

# How should HavenBags store the bag data?
# 'files' - Store each bag as individual files.
# 'sqlite' - Store all data in a database file.
# 'mysql' -  Store all data in an external database.
# 'mysqlplus' -  Store all bags on an external database, loading/saving directly to the database. Can be used to use bags across servers.
save-type: 'sqlite'

# MySQL database settings.
mysql:
 host: 'localhost'
 port: 3306
 name: 'minecraft'
 user: 'admin'
 password: 'pass'

# How often should we save bags onto the server?
# In seconds.
# Default: 1200 = 20min
auto-save-interval: 1200

# Should HavenBags write in the console when saving?
auto-save-message: true

# Language used when translating material and item names.
## Supported languages:
# English (US) --------- en_us
# English -------------- en_gb
# Danish --------------- da_dk
# German --------------- de_de
# Spanish -------------- es_es
# French --------------- fr_fr
# Turkish -------------- tr_tr
# Dutch ---------------- nl_nl
# Japenese ------------- ja_jp
# Korean --------------- ko_kr
# Chinese (Simplified) - zh_cn
# Russian -------------- ru_ru
# Polish --------------- pl_pl
# Portuguese ----------- pt_pt
# Portuguese (Brazil) -- pt_br
language: 'en_us'

# Should the bags use heads or items?
# HEAD - use Player Heads.
# ITEM - use regular items.
bag-type: HEAD

# Item material if the bag-type is 'ITEM'
bag-material: ENDER_CHEST

# Custom Model Data if the bag-type is 'ITEM'
bag-custom-model-data: 0

# Want CustomModelData per size instead?
# You can fill these with the same method as above.
# Existing bags are not updated.
bag-custom-model-datas:
 enabled: false
 size-9: 0
 size-18: 0
 size-27: 0
 size-36: 0
 size-45: 0
 size-54: 0
 size-ownerless-9: 0
 size-ownerless-18: 0
 size-ownerless-27: 0
 size-ownerless-36: 0
 size-ownerless-45: 0
 size-ownerless-54: 0

# Item Model if the bag-type is 'ITEM'
bag-item-model: ''

# Texture of the bag. Must be Base64 format.
# You can get textures from https://minecraft-heads.com/
# The texture by default: https://minecraft-heads.com/custom-heads/decoration/1906-bag
# At the bottom of the page there's a section called "For Developers".
# Inside "For Developers" is a value based off of a large amount of random letters, numbers and symbols. That is the Base64 texture.
bag-texture: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNGNiM2FjZGMxMWNhNzQ3YmY3MTBlNTlmNGM4ZTliM2Q5NDlmZGQzNjRjNjg2OTgzMWNhODc4ZjA3NjNkMTc4NyJ9fX0='

# Want textures per size instead?
# You can fill these with the same method as above.
# Existing bags are not updated.
bag-textures:
 enabled: false
 size-9: ''
 size-18: ''
 size-27: ''
 size-36: ''
 size-45: ''
 size-54: ''
 size-ownerless-9: ''
 size-ownerless-18: ''
 size-ownerless-27: ''
 size-ownerless-36: ''
 size-ownerless-45: ''
 size-ownerless-54: ''
 
# Should we change the bag's texture regarless of other settings,
# based on how full the bag is?
# NOTE: This function glitches if 'keep-bags' is set to false.
capacity-based-textures:
 enabled: false
 # Defined capacities and their defined textures.
 # If a bag is over the capacity defined, they get the texture.
 textures:
  '0': ''
  '25': ''
  '50': ''
  '70': ''
  '90': ''

# Sound played when opening a bag.
# Sounds: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Sound.html
# 1.17 Sounds: https://helpch.at/docs/1.17/org/bukkit/Sound.html
open-sound: 'ITEM_BUNDLE_INSERT'
open-volume: 1
open-pitch: 1

# Sound played when closing a bag.
close-sound: 'ITEM_BUNDLE_DROP_CONTENTS'
close-volume: 1
close-pitch: 1

# Sound played when a bag is dropped due to the inventory being full.
inventory-full-sound: 'ENTITY_VILLAGER_NO'
inventory-full-volume: 1
inventory-full-pitch: 1

# The max amount of bags a player can create.
# Note that is they lose a bag, they'll need it restored, 
# or their max-bags would essentially be 8. (if 9)
# (Ownerless bags do not count, set 0 for unlimited)
max-bags: 9

# How many bags the player can carry at a time.
# set 0 for unlimited.
carry-limit: 3

# Should bags be protected from being destroyed by things such as Fire, Lava, Cactus, and other things?
protect-bags: true

# Should dropped bags only be able to be picked up by their owner?
protect-bags-players: false

# Can bags be put inside other bags?
bags-in-bags: false

# Can bags be put inside shulkers?
bags-in-shulkers: true

# Can bags be put inside bundles?
bags-in-bundles: false

# Should bags always remain in the player's inventory?
# Good to use alongside Soulbound, otherwise death will drop the item.
inventory-lock: false

# Should bags be kept through death?
# May be incompatible with other plugins.
soulbound: false

# Should /havenbags help, show commands without mouseover text, and the information below each command?
old-help-menu: false

# Can bags automatically pick up drops?
auto-pickup: true
auto-pickup-sound: 'ENTITY_ITEM_PICKUP'
auto-pickup-volume: 0.8
auto-pickup-pitch-min: 1.05
auto-pickup-pitch-max: 1.25

# Should Auto-Pickup put items from the inventory into the bag as well?
auto-pickup-inventory:
 enabled: false
 events:
  onBlockBreak: true # For effect like "Teleport Drops" from AdvancedEnchants or EliteEnchants.
  onItemPickup: true # To add existing items in the inventory to the bag.
  
# Can players trust other players with access to their bound bags?
trusting: true

# Should bags be able to used as quivers?
# Will prioritize offhand over inventory.
quiver-bags: true

# Holding a shield while using the quiver feature tends to bug out.
# Here are a few fixes you can choose:
# 0 - No fix
# 1 - Semi fix, shield animation blocked and arrow gets drawn, but bow/crossbow isnt charged.
# 2 - Quivers are disabled if holding a shield.
quiver-shield-fix: 2

# Should players be able to magnify their bags?
# If enabled, nearby drops will move towards the player.
magnet:
 enabled: true
 tick-rate: 2 # How often the task should run
 range: 5.0
 speed: 0.1
 vertical: false # Should drops ignore gravity to move vertically towards the player?
 require-autopickup: false
 only-autopickup-items: false
 instant: false # This will teleport the items to the player instantly
 # instead of moving them over time.
 
effects:
 refresh-rate: 100 # How often the task should run. 100 ticks = 5s.

# Bag Upgrades
# If enabled, remember to allow "ANVIL" in 'allowed-containers'.
upgrades:
 # Can players upgrade bags in Anvils?
 enabled: false
 # Should bags keep their texture or upgrade to the next bag size?
 # (Ignored if 'bag-textures' is disabled)
 keep-texture: false
 # Bag upgrades.
 # <> = Optional
 # MATERIAL:AMOUNT:<CUSTOMMODELDATA>
 from-9-to-18: EMERALD:5:90000
 from-18-to-27: DIAMOND:10:90001
 from-27-to-36: NETHERITE_INGOT:1:90002
 from-36-to-45: NETHERITE_BLOCK:1:90003
 from-45-to-54: END_CRYSTAL:1
 
# Token
# Used to create a generic token, which you can edit in-game.
# The rest of the data for the token is given when using the command.
# You can create skins in the 'textures.yml' file.
# You can create effects in the 'effects.yml' file.
# Placeholders work in names and lore.
token:
 skin:
  displayname: '&aSkin Token'
  # If material is PLAYER_HEAD, the head's texture will be the same as the skin.
  material: PLAYER_HEAD
  custommodeldata: 0 # 0 to ignore
  # Placeholders:
  # %skin% - Name of the skin found in textures.yml. 
  lore:
   - '&7Combine with a bag in a fletching table to apply.'
   - '&7Skin: &e%skin%'
   # You can add extra lore in-game, with things such as which skin it is.
 effect:
  displayname: '&eEffect Token'
  material: PLAYER_HEAD
  # base64 texture for PLAYER_HEAD material, can also be a value from textures.yml.
  texture: 'eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmMzNGQxMmY3YWM5MzliMTE1MWQxMjE0NmQwMjM5ZWYwMTg4ZTQwM2VlMTk2NmQzZGIxOTllNjY0ZmYzODI4MyJ9fX0='
  custommodeldata: 0 # 0 to ignore
  # Placeholders:
  # %effect% - Name of the effect found in effects.yml. 
  lore:
   - '&7Combine with a bag in a fletching table to apply.'
   - '&7Effect: &e%effect%'
   # You can add extra lore in-game, with things such as effect effects.
  
# Should upgrades and skins be applied through an anvil?
bag-upgrades-anvil: false
  
# Custom GUI used to upgrade and skin bags.
upgrade-gui: 
 enabled: true
 block: FLETCHING_TABLE
 noteblock: # Requires "block" to be NOTE_BLOCK.
  instrument: BASS_DRUM # https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Instrument.html
  note: 0
 title: '&eBag Upgrade'
 gui-size: 27 # Must be to the power of 9. i.e. Rows*9, 3*9 = 27
 slots:
  bag: 10 # Bag and Token can be used interchangeable.
  token: 12
  result: 15 # upgrade/skin result
 filler: GRAY_STAINED_GLASS_PANE # Set to AIR to have no fillers, useful when using custom gui.
 custom-filler:
  '0': LIME_STAINED_GLASS_PANE # Each corner of the 27 slot gui.
  '8': LIME_STAINED_GLASS_PANE
  '18': LIME_STAINED_GLASS_PANE
  '26': LIME_STAINED_GLASS_PANE
 success-sound: ENTITY_VILLAGER_WORK_FLETCHER # https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Sound.html

# Which containers are the player allowed to interact with bags?
# Use this to prevent the player using bags in unintended ways, such as crafting.
# Full list of InventoryTypes: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/event/inventory/InventoryType.html
# Default: CRAFTING, HOPPER, PLAYER, CREATIVE
allowed-containers:
- CHEST
- ENDER_CHEST
- BARREL
- SHULKER_BOX
- MERCHANT
- ANVIL

# Specify if bags should not work in specific worlds.
# Worlds do not include _nether or _the_end.
# You have to manually add those.
blacklist:
 - world_name
 - world_name_nether
 - another_world
 
# GUI where the players can restore or delete their own bags.
player-gui:
 enabled: false
 # Can players restore their own bags?
 self-restore: true
 # Can players delete their own bags?
 self-delete: true